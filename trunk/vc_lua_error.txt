今天在《Programming In Lua》中25章--扩展你的程序，C中使用Lua时，代码片断如下：

 1 #ifdef __cplusplus
 2 extern "C" {
 3 #endif
 4 #include "lua.h"
 5 #include "lualib.h"
 6 #include "lauxlib.h"
 7 #ifdef __cplusplus
 8 }
 9 #endif
10 
11 #include <stdio.h>
12 #include <stdlib.h>
13 #include <string.h>
14 
15 #pragma comment(lib, "lua51.lib")
16 
17 void error (lua_State* L, const char* fmt, )
18 {
19     va_list argp;
20     va_start(argp, fmt);
21     vfprintf(stderr, fmt, argp);
22     va_end(argp);
23     lua_close(L);
24     exit(EXIT_FAILURE);
25 }
26 
27 void load(char *filename, int *width, int* height) 
28 {
29     lua_State* L = lua_open();
30     luaopen_base(L);
31     luaopen_io(L);
32     luaopen_string(L);
33     luaopen_math(L);
34 
35     if (luaL_loadfile(L, filename) || lua_pcall(L, 0, 0, 0))
36         error(L, "cannot run configuration file: %s", lua_tostring(L, -1));
37 
38     lua_getglobal(L, "width");
39     lua_getglobal(L, "height");
40 
41     if (!lua_isnumber(L, -2))
42         error(L, "'width' should be a number\n");
43     if (!lua_isnumber(L, -1))
44         error(L, "'height' should be a number\n");
45     *width = (int)lua_tonumber(L, -2);
46     *height = (int)lua_tonumber(L, -1);
47 
48     lua_close(L);
49 }
50 
51 int main ()
52 {
53     int width, height;
54     load("cfg.lua", &width, &height);
55 
56     printf("%d\t%d\n", width, height);
57 
58     return 0;
59 }
60 


运行的时候会出现PANIC: unprotected error in call to Lua API (no calling environment)，调试到第31行的时候调试程序自动退出。

原来在Lua5.1中不能直接调用luaopen_*函数，解决办法是调用luaL_openlibs(), 代码如下：

 1 #ifdef __cplusplus
 2  extern "C" {
 3  #endif
 4  #include "lua.h"
 5  #include "lualib.h"
 6  #include "lauxlib.h"
 7  #ifdef __cplusplus
 8  }
 9  #endif
10  
11  #include <stdio.h>
12  #include <stdlib.h>
13  #include <string.h>
14  
15  #pragma comment(lib, "lua51.lib")
16  
17  void error (lua_State* L, const char* fmt, )
18  {
19      va_list argp;
20      va_start(argp, fmt);
21      vfprintf(stderr, fmt, argp);
22      va_end(argp);
23      lua_close(L);
24      exit(EXIT_FAILURE);
25  }
26  
27  void load(char *filename, int *width, int* height) 
28  {
29      lua_State* L = lua_open();
30      luaopen_base(L);
31      luaL_openlibs(L);
32  //  luaopen_io(L);
33  //  luaopen_string(L);
34  //  luaopen_math(L);
35  
36      if (luaL_loadfile(L, filename) || lua_pcall(L, 0, 0, 0))
37          error(L, "cannot run configuration file: %s", lua_tostring(L, -1)
38  
39      lua_getglobal(L, "width");
40      lua_getglobal(L, "height");
41  
42      if (!lua_isnumber(L, -2))
43          error(L, "'width' should be a number\n");
44      if (!lua_isnumber(L, -1))
45          error(L, "'height' should be a number\n");
46      *width = (int)lua_tonumber(L, -2);
47      *height = (int)lua_tonumber(L, -1);
48  
49      lua_close(L);
50  }
51  
52  int main ()
53  {
54      int width, height;
55      load("cfg.lua", &width, &height);
56  
57      printf("%d\t%d\n", width, height);
58  
59      return 0;
60  }
61 

另外一种方法是调用lua_cpcall(L, luaopen_io, 0);

成功解决问题! :)